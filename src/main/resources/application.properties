spring.application.name=@description@
application.version=@project.version@
application.build=@revision@
rs.baud_rate=9600
rs.comports=COM1,S0
rs.message_delimiter=13,10
#13 = enter, 10 = linefeed
#server.error.whitelabel.enabled=true
server.error.include-stacktrace=always
#server.error.path=/error
logging.file.path=logs
ws.endpoint=/echo
spring.thymeleaf.enabled=true
spring.thymeleaf.suffix=.html
spring.thymeleaf.prefix=classpath:/templates/
ws.heartbeat.interval=1000
server.port=443
ip.db-client=127.0.0.1:8085
rest.service.enabled=false
name.service.password=$2a$04$WwPwpSBf8IlZP3NVLnyfru38YnkCUaG4hHOoMYjkVxwDgGJ9xghjy
rest.service.credentials=admin:admin
logging.tracking.file.name=tracking

## default connection pool
spring.datasource.hikari.connectionTimeout=20000
spring.datasource.hikari.maximumPoolSize=5

## PostgreSQL
spring.datasource.url=jdbc:mariadb://${DB_HOST_IP:mariadb}:3306/certificates
spring.datasource.username=${DB_USER:user}
spring.datasource.password=${DB_PASSWORD:password}

# create and drop table, good for testing, production set to none or comment it
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MariaDB103Dialect
spring.jpa.open-in-view=false

server.ssl.enabled=true
server.ssl.key-store-type=PKCS12
server.ssl.key-store=${CERT_PATH:cert/server.p12}
server.ssl.key-store-password=password
server.ssl.key-password=password
server.ssl.client-auth=want

server.servlet.session.timeout=15m

server.tomcat.uri-encoding=UTF-8

server.tomcat.accesslog.enabled=true

custom.server.credentials.name=${SERVER_USER:user}
custom.server.credentials.password=${SERVER_PASSWORD:user}
custom.server.credentials.admin.name=${SERVER_ADMIN_USER:admin}
custom.server.credentials.admin.password=${SERVER_ADMIN_PASSWORD:admin}

# threadpool configuration
threads.core-pool-size=2
threads.max-pool-size=10
threads.queue-capacity=100
